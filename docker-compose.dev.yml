version: '3.8'

services:
  backend:
    build:
      context: ./Backend
      dockerfile: ../Docker/backend.Dockerfile
    container_name: filacero-backend-dev
    ports:
      - "3000:3000"
      - "9229:9229"  # puerto debug si lo usas
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgres://user:password@postgres:5432/filacero
    volumes:
      - ./Backend:/app          # bind mount para editar código y que se refleje inmediatamente
      - /app/node_modules       # volumen anónimo para proteger node_modules del host
    command: ["npm","run","start:dev"]
    depends_on:
      - postgres
    restart: unless-stopped

  frontend:
    build:
      context: ./Frontend
      dockerfile: ../Docker/frontend.Dockerfile
    container_name: filacero-frontend-dev
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_API_BASE=http://host.docker.internal:3000/api
      - NODE_ENV=development
    volumes:
      - ./Frontend:/app
      - /app/node_modules
    command: ["npm","run","dev"]
    depends_on:
      - backend
    restart: unless-stopped

  postgres:
    image: postgres:13
    container_name: filacero-postgres-dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Docker/db:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=filacero
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    restart: unless-stopped

volumes:
  postgres_data: