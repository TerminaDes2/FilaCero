generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model roles {
  id_rol     BigInt     @id @default(autoincrement()) @map("id_rol")
  nombre_rol String     @unique @map("nombre_rol") @db.VarChar(50)
  usuarios   usuarios[]

  @@map("roles")
}

model usuarios {
  id_usuario         BigInt       @id @default(autoincrement()) @map("id_usuario")
  id_rol             BigInt?      @map("id_rol")
  nombre             String       @map("nombre") @db.VarChar(150)
  correo_electronico String       @unique @map("correo_electronico") @db.VarChar(254)
  password_hash      String       @map("password_hash") @db.VarChar(255)
  numero_telefono    String?      @map("numero_telefono") @db.VarChar(30)
  fecha_nacimiento   DateTime?    @map("fecha_nacimiento") @db.Date
  fecha_registro     DateTime?    @default(now()) @map("fecha_registro") @db.Timestamptz(6)
  estado             String?      @map("estado") @db.VarChar(20)
  comentario         comentario[]
  corte_caja         corte_caja[]
  feedback           feedback[]
  role               roles?       @relation(fields: [id_rol], references: [id_rol], onDelete: NoAction, onUpdate: NoAction)
  venta              venta[]
  empleados          empleados[]
  movimientos_inventario movimientos_inventario[]
  negocios_propios   negocio[]   @relation("UsuarioOwnerNegocio")

  @@map("usuarios")
}

model categoria {
  id_categoria BigInt     @id @default(autoincrement())
  nombre       String     @unique @db.VarChar(120)
  producto     producto[]
}

model comentario {
  id_comentario BigInt     @id @default(autoincrement())
  id_usuario    BigInt?
  comentario    String?
  fecha         DateTime?  @db.Timestamptz(6)
  usuarios      usuarios?  @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
  feedback      feedback[]
}

model corte_caja {
  id_corte       BigInt    @id @default(autoincrement())
  id_negocio     BigInt?
  id_usuario     BigInt?
  fecha_inicio   DateTime? @db.Timestamptz(6)
  fecha_fin      DateTime? @db.Timestamptz(6)
  monto_inicial  Decimal?  @db.Decimal(14, 2)
  monto_final    Decimal?  @db.Decimal(14, 2)
  ventas_totales Int?
  negocio        negocio?  @relation(fields: [id_negocio], references: [id_negocio], onDelete: NoAction, onUpdate: NoAction)
  usuarios       usuarios? @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
}

model detalle_venta {
  id_detalle      BigInt    @id @default(autoincrement())
  id_venta        BigInt?
  id_producto     BigInt?
  cantidad        Int?
  precio_unitario Decimal?  @db.Decimal(12, 2)
  producto        producto? @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction)
  venta           venta?    @relation(fields: [id_venta], references: [id_venta], onDelete: NoAction, onUpdate: NoAction)
  movimientos     movimientos_inventario[] @relation("DetalleVentaMovimientos")
}

model feedback {
  id_feedback   BigInt      @id @default(autoincrement())
  id_usuario    BigInt?
  id_comentario BigInt?
  calificacion  Int?        @db.SmallInt
  fecha         DateTime?   @db.Timestamptz(6)
  comentario    comentario? @relation(fields: [id_comentario], references: [id_comentario], onDelete: NoAction, onUpdate: NoAction)
  usuarios      usuarios?   @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
}

model inventario {
  id_inventario       BigInt    @id @default(autoincrement())
  id_negocio          BigInt?
  id_producto         BigInt?
  stock_minimo        Int?      @default(0)
  cantidad_actual     Int?      @default(0)
  fecha_actualizacion DateTime? @db.Timestamptz(6)
  negocio             negocio?  @relation(fields: [id_negocio], references: [id_negocio], onDelete: NoAction, onUpdate: NoAction)
  producto            producto? @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction)

  @@unique([id_negocio, id_producto])
  @@index([id_negocio])
  @@index([id_producto])
  @@index([id_negocio, id_producto])
}

model negocio {
  id_negocio     BigInt           @id @default(autoincrement())
  nombre         String           @db.VarChar(200)
  direccion      String?
  telefono       String?          @db.VarChar(30)
  correo         String?          @db.VarChar(254)
  logo           String?
  fecha_registro DateTime?        @default(now()) @db.Timestamptz(6)
  owner_id       BigInt?
  corte_caja     corte_caja[]
  inventario     inventario[]
  reporte_ventas reporte_ventas[]
  venta          venta[]
  owner          usuarios?        @relation("UsuarioOwnerNegocio", fields: [owner_id], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
  empleados      empleados[]
  movimientos_inventario movimientos_inventario[]
}

model producto {
  id_producto   BigInt          @id @default(autoincrement())
  id_categoria  BigInt?
  nombre        String          @db.VarChar(200)
  descripcion   String?
  codigo_barras String?         @unique @db.VarChar(100)
  precio        Decimal         @db.Decimal(12, 2)
  imagen        String?
  estado        String?         @db.VarChar(30)
  detalle_venta detalle_venta[]
  inventario    inventario[]
  categoria     categoria?      @relation(fields: [id_categoria], references: [id_categoria], onDelete: NoAction, onUpdate: NoAction)
  movimientos_inventario movimientos_inventario[]
}

model reporte_ventas {
  id_reporte          BigInt    @id @default(autoincrement())
  id_negocio          BigInt?
  fecha               DateTime? @db.Date
  total_ventas        Decimal?  @db.Decimal(14, 2)
  total_productos     Int?
  total_efectivo      Decimal?  @db.Decimal(14, 2)
  total_tarjeta       Decimal?  @db.Decimal(14, 2)
  total_transferencia Decimal?  @db.Decimal(14, 2)
  negocio             negocio?  @relation(fields: [id_negocio], references: [id_negocio], onDelete: NoAction, onUpdate: NoAction)
}

model tipo_pago {
  id_tipo_pago BigInt  @id @default(autoincrement())
  tipo         String  @unique @db.VarChar(50)
  descripcion  String?
  venta        venta[]
}

model venta {
  id_venta      BigInt          @id @default(autoincrement())
  id_negocio    BigInt?
  id_usuario    BigInt?
  fecha_venta   DateTime?       @db.Timestamptz(6)
  total         Decimal?        @db.Decimal(14, 2)
  id_tipo_pago  BigInt?
  estado        String?         @db.VarChar(30)
  detalle_venta detalle_venta[]
  negocio       negocio?        @relation(fields: [id_negocio], references: [id_negocio], onDelete: NoAction, onUpdate: NoAction)
  tipo_pago     tipo_pago?      @relation(fields: [id_tipo_pago], references: [id_tipo_pago], onDelete: NoAction, onUpdate: NoAction)
  usuarios      usuarios?       @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
  movimientos_inventario movimientos_inventario[]
}

// Empleados (usuario perteneciente a un negocio)
model empleados {
  id_empleado BigInt   @id @default(autoincrement())
  negocio_id  BigInt
  usuario_id  BigInt
  estado      String   @default("activo") @db.VarChar(20)
  fecha_alta  DateTime @default(now()) @db.Timestamptz(6)

  negocio negocio @relation(fields: [negocio_id], references: [id_negocio], onDelete: NoAction, onUpdate: NoAction)
  usuario usuarios @relation(fields: [usuario_id], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)

  @@unique([negocio_id, usuario_id])
}

// Auditor√≠a de movimientos de inventario
model movimientos_inventario {
  id_movimiento BigInt   @id @default(autoincrement())
  id_negocio    BigInt
  id_producto   BigInt
  delta         Int
  motivo        String   @db.VarChar(50)
  id_venta      BigInt?
  id_detalle    BigInt?
  id_usuario    BigInt?
  fecha         DateTime @default(now()) @db.Timestamptz(6)

  negocio       negocio     @relation(fields: [id_negocio], references: [id_negocio], onDelete: NoAction, onUpdate: NoAction)
  producto      producto    @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction)
  venta         venta?      @relation(fields: [id_venta], references: [id_venta], onDelete: NoAction, onUpdate: NoAction)
  detalle       detalle_venta? @relation("DetalleVentaMovimientos", fields: [id_detalle], references: [id_detalle], onDelete: NoAction, onUpdate: NoAction)
  usuario_ref   usuarios?   @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
}
